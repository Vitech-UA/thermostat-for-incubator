
AVRASM ver. 2.1.30  D:\Радіо_електроніка\make\Termostat\Debug\List\Temostat.asm Tue Jul 07 14:48:51 2015

D:\Радіо_електроніка\make\Termostat\Debug\List\Temostat.asm(1086): warning: Register r5 already defined by the .DEF directive
D:\Радіо_електроніка\make\Termostat\Debug\List\Temostat.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\Радіо_електроніка\make\Termostat\Debug\List\Temostat.asm(1088): warning: Register r7 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.10 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 8,000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	RCALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	RCALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 c03a      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 c06d      	RJMP _timer1_compa_isr
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 _conv_delay_G100:
000013 0064
000014 00c8
000015 0190
000016 0320      	.DB  0x64,0x0,0xC8,0x0,0x90,0x1,0x20,0x3
                 _bit_mask_G100:
000017 fff8
000018 fffc
000019 fffe
00001a ffff      	.DB  0xF8,0xFF,0xFC,0xFF,0xFE,0xFF,0xFF,0xFF
                 
                 _0x0:
00001b 6e49
00001c 7563
00001d 6162
00001e 6f74      	.DB  0x49,0x6E,0x63,0x75,0x62,0x61,0x74,0x6F
00001f 3d72
000020 0020
000021 6554
000022 6d72      	.DB  0x72,0x3D,0x20,0x0,0x54,0x65,0x72,0x6D
000023 736f
000024 6174
000025 3d74
000026 0020      	.DB  0x6F,0x73,0x74,0x61,0x74,0x3D,0x20,0x0
                 _0x2020003:
000027 c080      	.DB  0x80,0xC0
                 _0x2040060:
D:\Радіо_електроніка\make\Termostat\Debug\List\Temostat.asm(1129): warning: .cseg .db misalignment - padding zero byte
000028 0001      	.DB  0x1
                 _0x2040000:
000029 4e2d
00002a 4e41
00002b 4900
00002c 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Радіо_електроніка\make\Termostat\Debug\List\Temostat.asm(1132): warning: .cseg .db misalignment - padding zero byte
00002d 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00002e 000c      	.DW  0x0C
00002f 0160      	.DW  _0x6
000030 0036      	.DW  _0x0*2
                 
000031 000c      	.DW  0x0C
000032 016c      	.DW  _0x6+12
000033 0042      	.DW  _0x0*2+12
                 
000034 0002      	.DW  0x02
000035 01b1      	.DW  __base_y_G101
000036 004e      	.DW  _0x2020003*2
                 
000037 0001      	.DW  0x01
000038 01b5      	.DW  __seed_G102
000039 0050      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00003a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003b 94f8      	CLI
00003c 27ee      	CLR  R30
00003d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003e e0f1      	LDI  R31,1
00003f bffb      	OUT  GICR,R31
000040 bfeb      	OUT  GICR,R30
000041 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000042 e08d      	LDI  R24,(14-2)+1
000043 e0a2      	LDI  R26,2
000044 27bb      	CLR  R27
                 __CLEAR_REG:
000045 93ed      	ST   X+,R30
000046 958a      	DEC  R24
000047 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000048 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000049 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004b 93ed      	ST   X+,R30
00004c 9701      	SBIW R24,1
00004d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004e e5ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000050 9185      	LPM  R24,Z+
000051 9195      	LPM  R25,Z+
000052 9700      	SBIW R24,0
000053 f061      	BREQ __GLOBAL_INI_END
000054 91a5      	LPM  R26,Z+
000055 91b5      	LPM  R27,Z+
000056 9005      	LPM  R0,Z+
000057 9015      	LPM  R1,Z+
000058 01bf      	MOVW R22,R30
000059 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005a 9005      	LPM  R0,Z+
00005b 920d      	ST   X+,R0
00005c 9701      	SBIW R24,1
00005d f7e1      	BRNE __GLOBAL_INI_LOOP
00005e 01fb      	MOVW R30,R22
00005f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000060 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000061 bfed      	OUT  SPL,R30
000062 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000063 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000064 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000065 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000066 c076      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega8.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <1wire.h>
                 ;#include <ds18b20.h>
                 ;#include <alcd.h>
                 ;#include <stdlib.h>
                 ;
                 ;
                 ;#define ADC_VREF_TYPE ((0<<REFS1) | (0<<REFS0) | (1<<ADLAR))
                 ;#define RELE PORTD.1
                 ;#define GISTERESIS 0.1
                 ;
                 ;
                 ;unsigned char read_adc(unsigned char adc_input)
                 ; 0000 000F {
                 
                 	.CSEG
                 _read_adc:
                 ; .FSTART _read_adc
                 ; 0000 0010 ADMUX=adc_input | ADC_VREF_TYPE;
000067 93aa      	ST   -Y,R26
                 ;	adc_input -> Y+0
000068 81e8      	LD   R30,Y
000069 62e0      	ORI  R30,0x20
00006a b9e7      	OUT  0x7,R30
                 ; 0000 0011 // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 0012 delay_us(10);
                +
00006b e18b     +LDI R24 , LOW ( 27 )
                +__DELAY_USB_LOOP :
00006c 958a     +DEC R24
00006d f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 27
                 ; 0000 0013 // Start the AD conversion
                 ; 0000 0014 ADCSRA|=(1<<ADSC);
00006e 9a36      	SBI  0x6,6
                 ; 0000 0015 // Wait for the AD conversion to complete
                 ; 0000 0016 while ((ADCSRA & (1<<ADIF))==0);
                 _0x3:
00006f 9b34      	SBIS 0x6,4
000070 cffe      	RJMP _0x3
                 ; 0000 0017 ADCSRA|=(1<<ADIF);
000071 9a34      	SBI  0x6,4
                 ; 0000 0018 return ADCH;
000072 b1e5      	IN   R30,0x5
000073 c1da      	RJMP _0x20C0004
                 ; 0000 0019 }
                 ; .FEND
                 ;
                 ;
                 ;float temper = 0.0;
                 ;float Dtemper = 0.0;
                 ;
                 ;char lcd_buffer[20];
                 ;char lcd_buffer2[20];
                 ;
                 ;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
                 ; 0000 0023 {
                 _timer1_compa_isr:
                 ; .FSTART _timer1_compa_isr
000074 920a      	ST   -Y,R0
000075 921a      	ST   -Y,R1
000076 92fa      	ST   -Y,R15
000077 936a      	ST   -Y,R22
000078 937a      	ST   -Y,R23
000079 938a      	ST   -Y,R24
00007a 939a      	ST   -Y,R25
00007b 93aa      	ST   -Y,R26
00007c 93ba      	ST   -Y,R27
00007d 93ea      	ST   -Y,R30
00007e 93fa      	ST   -Y,R31
00007f b7ef      	IN   R30,SREG
000080 93ea      	ST   -Y,R30
                 ; 0000 0024            lcd_clear();
000081 d175      	RCALL _lcd_clear
                 ; 0000 0025            lcd_gotoxy(0,0);
000082 d2a8      	RCALL SUBOPT_0x0
000083 e0a0      	LDI  R26,LOW(0)
000084 d165      	RCALL _lcd_gotoxy
                 ; 0000 0026            lcd_puts("Incubator= ");
                +
000085 e6a0     +LDI R26 , LOW ( _0x6 + ( 0 ) )
000086 e0b1     +LDI R27 , HIGH ( _0x6 + ( 0 ) )
                 	__POINTW2MN _0x6,0
000087 d190      	RCALL _lcd_puts
                 ; 0000 0027 
                 ; 0000 0028            lcd_gotoxy(11,0);
000088 e0eb      	LDI  R30,LOW(11)
000089 93ea      	ST   -Y,R30
00008a e0a0      	LDI  R26,LOW(0)
00008b d15e      	RCALL _lcd_gotoxy
                 ; 0000 0029            ftoa(temper,1,lcd_buffer);
00008c 91e0 0181 	LDS  R30,_temper
00008e 91f0 0182 	LDS  R31,_temper+1
000090 9160 0183 	LDS  R22,_temper+2
000092 9170 0184 	LDS  R23,_temper+3
000094 d558      	RCALL __PUTPARD1
000095 e0e1      	LDI  R30,LOW(1)
000096 93ea      	ST   -Y,R30
000097 e8a9      	LDI  R26,LOW(_lcd_buffer)
000098 e0b1      	LDI  R27,HIGH(_lcd_buffer)
000099 d1b6      	RCALL _ftoa
                 ; 0000 002A            lcd_puts(lcd_buffer);
00009a e8a9      	LDI  R26,LOW(_lcd_buffer)
00009b e0b1      	LDI  R27,HIGH(_lcd_buffer)
00009c d17b      	RCALL _lcd_puts
                 ; 0000 002B 
                 ; 0000 002C            lcd_gotoxy(0,1);
00009d d28d      	RCALL SUBOPT_0x0
00009e e0a1      	LDI  R26,LOW(1)
00009f d14a      	RCALL _lcd_gotoxy
                 ; 0000 002D            lcd_puts("Termostat= ");
                +
0000a0 e6ac     +LDI R26 , LOW ( _0x6 + ( 12 ) )
0000a1 e0b1     +LDI R27 , HIGH ( _0x6 + ( 12 ) )
                 	__POINTW2MN _0x6,12
0000a2 d175      	RCALL _lcd_puts
                 ; 0000 002E 
                 ; 0000 002F            lcd_gotoxy(11,1);
0000a3 e0eb      	LDI  R30,LOW(11)
0000a4 93ea      	ST   -Y,R30
0000a5 e0a1      	LDI  R26,LOW(1)
0000a6 d143      	RCALL _lcd_gotoxy
                 ; 0000 0030            ftoa(Dtemper,1,lcd_buffer2);
0000a7 d286      	RCALL SUBOPT_0x1
0000a8 d544      	RCALL __PUTPARD1
0000a9 e0e1      	LDI  R30,LOW(1)
0000aa 93ea      	ST   -Y,R30
0000ab e9ad      	LDI  R26,LOW(_lcd_buffer2)
0000ac e0b1      	LDI  R27,HIGH(_lcd_buffer2)
0000ad d1a2      	RCALL _ftoa
                 ; 0000 0031            lcd_puts(lcd_buffer2);
0000ae e9ad      	LDI  R26,LOW(_lcd_buffer2)
0000af e0b1      	LDI  R27,HIGH(_lcd_buffer2)
0000b0 d167      	RCALL _lcd_puts
                 ; 0000 0032 
                 ; 0000 0033 
                 ; 0000 0034           TCNT1H=0;
0000b1 d285      	RCALL SUBOPT_0x2
                 ; 0000 0035           TCNT1L=0;
                 ; 0000 0036 }
0000b2 91e9      	LD   R30,Y+
0000b3 bfef      	OUT  SREG,R30
0000b4 91f9      	LD   R31,Y+
0000b5 91e9      	LD   R30,Y+
0000b6 91b9      	LD   R27,Y+
0000b7 91a9      	LD   R26,Y+
0000b8 9199      	LD   R25,Y+
0000b9 9189      	LD   R24,Y+
0000ba 9179      	LD   R23,Y+
0000bb 9169      	LD   R22,Y+
0000bc 90f9      	LD   R15,Y+
0000bd 9019      	LD   R1,Y+
0000be 9009      	LD   R0,Y+
0000bf 9518      	RETI
                 ; .FEND
                 
                 	.DSEG
                 _0x6:
000160           	.BYTE 0x18
                 ;
                 ;
                 ;void Init_Port(void)
                 ; 0000 003A {
                 
                 	.CSEG
                 _Init_Port:
                 ; .FSTART _Init_Port
                 ; 0000 003B  DDRB=0xFF;
0000c0 efef      	LDI  R30,LOW(255)
0000c1 bbe7      	OUT  0x17,R30
                 ; 0000 003C  PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000c2 e0e0      	LDI  R30,LOW(0)
0000c3 bbe8      	OUT  0x18,R30
                 ; 0000 003D  DDRC=(0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (0<<DDC1) | (0<<DDC0);
0000c4 bbe4      	OUT  0x14,R30
                 ; 0000 003E  PORTC=(0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0000c5 bbe5      	OUT  0x15,R30
                 ; 0000 003F  DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (1<<DDD1) | (0<<DDD0);
0000c6 e0e2      	LDI  R30,LOW(2)
0000c7 bbe1      	OUT  0x11,R30
                 ; 0000 0040  PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000c8 e0e0      	LDI  R30,LOW(0)
0000c9 bbe2      	OUT  0x12,R30
                 ; 0000 0041 
                 ; 0000 0042 }
0000ca 9508      	RET
                 ; .FEND
                 ;
                 ;void InitTimer(void)
                 ; 0000 0045 {
                 _InitTimer:
                 ; .FSTART _InitTimer
                 ; 0000 0046 TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
0000cb e0e0      	LDI  R30,LOW(0)
0000cc bdef      	OUT  0x2F,R30
                 ; 0000 0047 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (1<<CS12) | (0<<CS11) | (1<<CS10);
0000cd e0e5      	LDI  R30,LOW(5)
0000ce bdee      	OUT  0x2E,R30
                 ; 0000 0048 TCNT1H=0x00;
0000cf d267      	RCALL SUBOPT_0x2
                 ; 0000 0049 TCNT1L=0x00;
                 ; 0000 004A ICR1H=0x00;
0000d0 e0e0      	LDI  R30,LOW(0)
0000d1 bde7      	OUT  0x27,R30
                 ; 0000 004B ICR1L=0x00;
0000d2 bde6      	OUT  0x26,R30
                 ; 0000 004C OCR1AH=0x0B;
0000d3 e0eb      	LDI  R30,LOW(11)
0000d4 bdeb      	OUT  0x2B,R30
                 ; 0000 004D OCR1AL=0xB8;
0000d5 ebe8      	LDI  R30,LOW(184)
0000d6 bdea      	OUT  0x2A,R30
                 ; 0000 004E OCR1BH=0x00;
0000d7 e0e0      	LDI  R30,LOW(0)
0000d8 bde9      	OUT  0x29,R30
                 ; 0000 004F OCR1BL=0x00;
0000d9 bde8      	OUT  0x28,R30
                 ; 0000 0050 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0051 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (1<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
0000da e1e0      	LDI  R30,LOW(16)
0000db bfe9      	OUT  0x39,R30
                 ; 0000 0052 }
0000dc 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 0056     {
                 _main:
                 ; .FSTART _main
                 ; 0000 0057         TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<TOIE0);
0000dd e0e0      	LDI  R30,LOW(0)
0000de bfe9      	OUT  0x39,R30
                 ; 0000 0058         MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
0000df bfe5      	OUT  0x35,R30
                 ; 0000 0059         UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000e0 b9ea      	OUT  0xA,R30
                 ; 0000 005A 
                 ; 0000 005B     //////////////////////////АЦП///////////////////////////
                 ; 0000 005C         // ADC initialization
                 ; 0000 005D         // ADC Clock frequency: 1000,000 kHz
                 ; 0000 005E         // ADC Voltage Reference: AREF pin
                 ; 0000 005F         // Only the 8 most significant bits of
                 ; 0000 0060         // the AD conversion result are used
                 ; 0000 0061         ADMUX=ADC_VREF_TYPE;
0000e1 e2e0      	LDI  R30,LOW(32)
0000e2 b9e7      	OUT  0x7,R30
                 ; 0000 0062         ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADFR) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
0000e3 e8e3      	LDI  R30,LOW(131)
0000e4 b9e6      	OUT  0x6,R30
                 ; 0000 0063         SFIOR=(0<<ACME);
0000e5 e0e0      	LDI  R30,LOW(0)
0000e6 bfe0      	OUT  0x30,R30
                 ; 0000 0064 
                 ; 0000 0065     //////////////////////////Ініціалізація_функції///////////////////////////
                 ; 0000 0066         InitTimer();
0000e7 dfe3      	RCALL _InitTimer
                 ; 0000 0067         Init_Port();
0000e8 dfd7      	RCALL _Init_Port
                 ; 0000 0068         w1_init();
0000e9 d2cc      	RCALL _w1_init
                 ; 0000 0069         lcd_init(16);
0000ea e1a0      	LDI  R26,LOW(16)
0000eb d13b      	RCALL _lcd_init
                 ; 0000 006A         ds18b20_init(0,0,40,1);
0000ec e0e0      	LDI  R30,LOW(0)
0000ed e0f0      	LDI  R31,HIGH(0)
0000ee d24c      	RCALL SUBOPT_0x3
0000ef d23b      	RCALL SUBOPT_0x0
0000f0 e2e8      	LDI  R30,LOW(40)
0000f1 93ea      	ST   -Y,R30
0000f2 e0a1      	LDI  R26,LOW(1)
0000f3 d0a2      	RCALL _ds18b20_init
                 ; 0000 006B 
                 ; 0000 006C         #asm("sei");
0000f4 9478      	sei
                 ; 0000 006D 
                 ; 0000 006E 
                 ; 0000 006F     while (1)
                 _0x7:
                 ; 0000 0070           {
                 ; 0000 0071 
                 ; 0000 0072            temper = (ds18b20_temperature(0));
0000f5 e0a0      	LDI  R26,LOW(0)
0000f6 e0b0      	LDI  R27,0
0000f7 d069      	RCALL _ds18b20_temperature
0000f8 93e0 0181 	STS  _temper,R30
0000fa 93f0 0182 	STS  _temper+1,R31
0000fc 9360 0183 	STS  _temper+2,R22
0000fe 9370 0184 	STS  _temper+3,R23
                 ; 0000 0073 
                 ; 0000 0074            Dtemper = read_adc(0) / 6.375;
000100 e0a0      	LDI  R26,LOW(0)
000101 df65      	RCALL _read_adc
000102 e0f0      	LDI  R31,0
000103 d23a      	RCALL SUBOPT_0x4
000104 01df      	MOVW R26,R30
000105 01cb      	MOVW R24,R22
                +
000106 e0e0     +LDI R30 , LOW ( 0x40CC0000 )
000107 e0f0     +LDI R31 , HIGH ( 0x40CC0000 )
000108 ec6c     +LDI R22 , BYTE3 ( 0x40CC0000 )
000109 e470     +LDI R23 , BYTE4 ( 0x40CC0000 )
                 	__GETD1N 0x40CC0000
00010a d455      	RCALL __DIVF21
00010b 93e0 0185 	STS  _Dtemper,R30
00010d 93f0 0186 	STS  _Dtemper+1,R31
00010f 9360 0187 	STS  _Dtemper+2,R22
000111 9370 0188 	STS  _Dtemper+3,R23
                 ; 0000 0075 
                 ; 0000 0076 
                 ; 0000 0077            if(temper > Dtemper)
000113 d21a      	RCALL SUBOPT_0x1
000114 d22c      	RCALL SUBOPT_0x5
000115 f009      	BREQ PC+2
000116 f408      	BRCC PC+2
000117 c001      	RJMP _0xA
                 ; 0000 0078            {
                 ; 0000 0079             RELE = 1;
000118 9a91      	SBI  0x12,1
                 ; 0000 007A            }
                 ; 0000 007B 
                 ; 0000 007C            if(temper < Dtemper - GISTERESIS)
                 _0xA:
000119 d214      	RCALL SUBOPT_0x1
                +
00011a ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00011b ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00011c ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00011d e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00011e d39c      	RCALL __SUBF12
00011f d221      	RCALL SUBOPT_0x5
000120 f408      	BRSH _0xD
                 ; 0000 007D            {
                 ; 0000 007E             RELE = 0;
000121 9891      	CBI  0x12,1
                 ; 0000 007F            }
                 ; 0000 0080 
                 ; 0000 0081 
                 ; 0000 0082           }
                 _0xD:
000122 cfd2      	RJMP _0x7
                 ; 0000 0083 }
                 _0x10:
000123 cfff      	RJMP _0x10
                 ; .FEND
                 
                 	.CSEG
                 _ds18b20_select:
                 ; .FSTART _ds18b20_select
000124 d226      	RCALL SUBOPT_0x6
000125 931a      	ST   -Y,R17
000126 d28f      	RCALL _w1_init
000127 30e0      	CPI  R30,0
000128 f411      	BRNE _0x2000003
000129 e0e0      	LDI  R30,LOW(0)
00012a c0f9      	RJMP _0x20C0005
                 _0x2000003:
00012b 81e9      	LDD  R30,Y+1
00012c 81fa      	LDD  R31,Y+1+1
00012d 9730      	SBIW R30,0
00012e f069      	BREQ _0x2000004
00012f e5a5      	LDI  R26,LOW(85)
000130 d2cb      	RCALL _w1_write
000131 e010      	LDI  R17,LOW(0)
                 _0x2000006:
000132 d21b      	RCALL SUBOPT_0x7
000133 91ed      	LD   R30,X+
000134 83a9      	STD  Y+1,R26
000135 83ba      	STD  Y+1+1,R27
000136 2fae      	MOV  R26,R30
000137 d2c4      	RCALL _w1_write
000138 5f1f      	SUBI R17,-LOW(1)
000139 3018      	CPI  R17,8
00013a f3b8      	BRLO _0x2000006
00013b c002      	RJMP _0x2000008
                 _0x2000004:
00013c ecac      	LDI  R26,LOW(204)
00013d d2be      	RCALL _w1_write
                 _0x2000008:
00013e e0e1      	LDI  R30,LOW(1)
00013f c0e4      	RJMP _0x20C0005
                 ; .FEND
                 _ds18b20_read_spd:
                 ; .FSTART _ds18b20_read_spd
000140 d20a      	RCALL SUBOPT_0x6
000141 d4c2      	RCALL __SAVELOCR4
000142 81ac      	LDD  R26,Y+4
000143 81bd      	LDD  R27,Y+4+1
000144 d20c      	RCALL SUBOPT_0x8
000145 f411      	BRNE _0x2000009
000146 e0e0      	LDI  R30,LOW(0)
000147 c016      	RJMP _0x20C0007
                 _0x2000009:
000148 ebae      	LDI  R26,LOW(190)
000149 d2b2      	RCALL _w1_write
00014a e010      	LDI  R17,LOW(0)
                +
00014b e728     +LDI R18 , LOW ( ___ds18b20_scratch_pad )
00014c e031     +LDI R19 , HIGH ( ___ds18b20_scratch_pad )
                 	__POINTWRM 18,19,___ds18b20_scratch_pad
                 _0x200000B:
00014d 933f      	PUSH R19
00014e 932f      	PUSH R18
                +
00014f 5f2f     +SUBI R18 , LOW ( - 1 )
000150 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000151 d2a5      	RCALL _w1_read
000152 91af      	POP  R26
000153 91bf      	POP  R27
000154 93ec      	ST   X,R30
000155 5f1f      	SUBI R17,-LOW(1)
000156 3019      	CPI  R17,9
000157 f3a8      	BRLO _0x200000B
000158 e7e8      	LDI  R30,LOW(___ds18b20_scratch_pad)
000159 e0f1      	LDI  R31,HIGH(___ds18b20_scratch_pad)
00015a d1e0      	RCALL SUBOPT_0x3
00015b e0a9      	LDI  R26,LOW(9)
00015c d2a9      	RCALL _w1_dow_crc8
00015d d474      	RCALL __LNEGB1
                 _0x20C0007:
00015e d4aa      	RCALL __LOADLOCR4
00015f 9626      	ADIW R28,6
000160 9508      	RET
                 ; .FEND
                 _ds18b20_temperature:
                 ; .FSTART _ds18b20_temperature
000161 d1e9      	RCALL SUBOPT_0x6
000162 931a      	ST   -Y,R17
000163 d1ea      	RCALL SUBOPT_0x7
000164 dfdb      	RCALL _ds18b20_read_spd
000165 30e0      	CPI  R30,0
000166 f411      	BRNE _0x200000D
000167 d1ec      	RCALL SUBOPT_0x9
000168 c0bb      	RJMP _0x20C0005
                 _0x200000D:
                +
000169 91e0 017c+LDS R30 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB1MN ___ds18b20_scratch_pad,4
00016b 95e2      	SWAP R30
00016c 70ef      	ANDI R30,0xF
00016d 95e6      	LSR  R30
00016e 70e3      	ANDI R30,LOW(0x3)
00016f 2f1e      	MOV  R17,R30
000170 d1dd      	RCALL SUBOPT_0x7
000171 d1df      	RCALL SUBOPT_0x8
000172 f411      	BRNE _0x200000E
000173 d1e0      	RCALL SUBOPT_0x9
000174 c0af      	RJMP _0x20C0005
                 _0x200000E:
000175 e4a4      	LDI  R26,LOW(68)
000176 d285      	RCALL _w1_write
000177 2fe1      	MOV  R30,R17
000178 e2a6      	LDI  R26,LOW(_conv_delay_G100*2)
000179 e0b0      	LDI  R27,HIGH(_conv_delay_G100*2)
00017a d1de      	RCALL SUBOPT_0xA
00017b d45f      	RCALL __GETW2PF
00017c d22f      	RCALL _delay_ms
00017d d1d0      	RCALL SUBOPT_0x7
00017e dfc1      	RCALL _ds18b20_read_spd
00017f 30e0      	CPI  R30,0
000180 f411      	BRNE _0x200000F
000181 d1d2      	RCALL SUBOPT_0x9
000182 c0a1      	RJMP _0x20C0005
                 _0x200000F:
000183 d232      	RCALL _w1_init
000184 2fe1      	MOV  R30,R17
000185 e2ae      	LDI  R26,LOW(_bit_mask_G100*2)
000186 e0b0      	LDI  R27,HIGH(_bit_mask_G100*2)
000187 d1d1      	RCALL SUBOPT_0xA
000188 d44e      	RCALL __GETW1PF
000189 91a0 0178 	LDS  R26,___ds18b20_scratch_pad
00018b 91b0 0179 	LDS  R27,___ds18b20_scratch_pad+1
00018d 23ea      	AND  R30,R26
00018e 23fb      	AND  R31,R27
00018f d1ae      	RCALL SUBOPT_0x4
                +
000190 e0a0     +LDI R26 , LOW ( 0x3D800000 )
000191 e0b0     +LDI R27 , HIGH ( 0x3D800000 )
000192 e880     +LDI R24 , BYTE3 ( 0x3D800000 )
000193 e39d     +LDI R25 , BYTE4 ( 0x3D800000 )
                 	__GETD2N 0x3D800000
000194 d37d      	RCALL __MULF12
000195 c08e      	RJMP _0x20C0005
                 ; .FEND
                 _ds18b20_init:
                 ; .FSTART _ds18b20_init
000196 93aa      	ST   -Y,R26
000197 81ab      	LDD  R26,Y+3
000198 81bc      	LDD  R27,Y+3+1
000199 d1b7      	RCALL SUBOPT_0x8
00019a f411      	BRNE _0x2000010
00019b e0e0      	LDI  R30,LOW(0)
00019c c031      	RJMP _0x20C0006
                 _0x2000010:
00019d 81e8      	LD   R30,Y
00019e 95e2      	SWAP R30
00019f 7fe0      	ANDI R30,0xF0
0001a0 0fee      	LSL  R30
0001a1 61ef      	ORI  R30,LOW(0x1F)
0001a2 83e8      	ST   Y,R30
0001a3 e4ae      	LDI  R26,LOW(78)
0001a4 d257      	RCALL _w1_write
0001a5 81a9      	LDD  R26,Y+1
0001a6 d255      	RCALL _w1_write
0001a7 81aa      	LDD  R26,Y+2
0001a8 d253      	RCALL _w1_write
0001a9 81a8      	LD   R26,Y
0001aa d251      	RCALL _w1_write
0001ab 81ab      	LDD  R26,Y+3
0001ac 81bc      	LDD  R27,Y+3+1
0001ad df92      	RCALL _ds18b20_read_spd
0001ae 30e0      	CPI  R30,0
0001af f411      	BRNE _0x2000011
0001b0 e0e0      	LDI  R30,LOW(0)
0001b1 c01c      	RJMP _0x20C0006
                 _0x2000011:
                +
0001b2 91a0 017b+LDS R26 , ___ds18b20_scratch_pad + ( 3 )
                 	__GETB2MN ___ds18b20_scratch_pad,3
0001b4 81ea      	LDD  R30,Y+2
0001b5 17ea      	CP   R30,R26
0001b6 f451      	BRNE _0x2000013
                +
0001b7 91a0 017a+LDS R26 , ___ds18b20_scratch_pad + ( 2 )
                 	__GETB2MN ___ds18b20_scratch_pad,2
0001b9 81e9      	LDD  R30,Y+1
0001ba 17ea      	CP   R30,R26
0001bb f429      	BRNE _0x2000013
                +
0001bc 91a0 017c+LDS R26 , ___ds18b20_scratch_pad + ( 4 )
                 	__GETB2MN ___ds18b20_scratch_pad,4
0001be 81e8      	LD   R30,Y
0001bf 17ea      	CP   R30,R26
0001c0 f011      	BREQ _0x2000012
                 _0x2000013:
0001c1 e0e0      	LDI  R30,LOW(0)
0001c2 c00b      	RJMP _0x20C0006
                 _0x2000012:
0001c3 81ab      	LDD  R26,Y+3
0001c4 81bc      	LDD  R27,Y+3+1
0001c5 d18b      	RCALL SUBOPT_0x8
0001c6 f411      	BRNE _0x2000015
0001c7 e0e0      	LDI  R30,LOW(0)
0001c8 c005      	RJMP _0x20C0006
                 _0x2000015:
0001c9 e4a8      	LDI  R26,LOW(72)
0001ca d231      	RCALL _w1_write
0001cb e0af      	LDI  R26,LOW(15)
0001cc d192      	RCALL SUBOPT_0xB
0001cd d1e8      	RCALL _w1_init
                 _0x20C0006:
0001ce 9625      	ADIW R28,5
0001cf 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G101:
                 ; .FSTART __lcd_write_nibble_G101
0001d0 93aa      	ST   -Y,R26
0001d1 b3e8      	IN   R30,0x18
0001d2 70ef      	ANDI R30,LOW(0xF)
0001d3 2fae      	MOV  R26,R30
0001d4 81e8      	LD   R30,Y
0001d5 7fe0      	ANDI R30,LOW(0xF0)
0001d6 2bea      	OR   R30,R26
0001d7 bbe8      	OUT  0x18,R30
0001d8 d188      	RCALL SUBOPT_0xC
0001d9 9ac2      	SBI  0x18,2
0001da d186      	RCALL SUBOPT_0xC
0001db 98c2      	CBI  0x18,2
0001dc d184      	RCALL SUBOPT_0xC
0001dd c070      	RJMP _0x20C0004
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0001de 93aa      	ST   -Y,R26
0001df 81a8      	LD   R26,Y
0001e0 dfef      	RCALL __lcd_write_nibble_G101
0001e1 81e8          ld    r30,y
0001e2 95e2          swap  r30
0001e3 83e8          st    y,r30
0001e4 81a8      	LD   R26,Y
0001e5 dfea      	RCALL __lcd_write_nibble_G101
                +
0001e6 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0001e7 958a     +DEC R24
0001e8 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0001e9 c064      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0001ea 93aa      	ST   -Y,R26
0001eb 81e8      	LD   R30,Y
0001ec e0f0      	LDI  R31,0
0001ed 54ef      	SUBI R30,LOW(-__base_y_G101)
0001ee 4ffe      	SBCI R31,HIGH(-__base_y_G101)
0001ef 81e0      	LD   R30,Z
0001f0 81a9      	LDD  R26,Y+1
0001f1 0fae      	ADD  R26,R30
0001f2 dfeb      	RCALL __lcd_write_data
0001f3 8059      	LDD  R5,Y+1
0001f4 8048      	LDD  R4,Y+0
0001f5 9622      	ADIW R28,2
0001f6 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
0001f7 e0a2      	LDI  R26,LOW(2)
0001f8 dfe5      	RCALL __lcd_write_data
0001f9 e0a3      	LDI  R26,LOW(3)
0001fa d164      	RCALL SUBOPT_0xB
0001fb e0ac      	LDI  R26,LOW(12)
0001fc dfe1      	RCALL __lcd_write_data
0001fd e0a1      	LDI  R26,LOW(1)
0001fe dfdf      	RCALL __lcd_write_data
0001ff e0a3      	LDI  R26,LOW(3)
000200 d15e      	RCALL SUBOPT_0xB
000201 e0e0      	LDI  R30,LOW(0)
000202 2e4e      	MOV  R4,R30
000203 2e5e      	MOV  R5,R30
000204 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000205 93aa      	ST   -Y,R26
000206 81a8      	LD   R26,Y
000207 30aa      	CPI  R26,LOW(0xA)
000208 f011      	BREQ _0x2020005
000209 1457      	CP   R5,R7
00020a f038      	BRLO _0x2020004
                 _0x2020005:
00020b d11f      	RCALL SUBOPT_0x0
00020c 9443      	INC  R4
00020d 2da4      	MOV  R26,R4
00020e dfdb      	RCALL _lcd_gotoxy
00020f 81a8      	LD   R26,Y
000210 30aa      	CPI  R26,LOW(0xA)
000211 f1e1      	BREQ _0x20C0004
                 _0x2020004:
000212 9453      	INC  R5
000213 9ac0      	SBI  0x18,0
000214 81a8      	LD   R26,Y
000215 dfc8      	RCALL __lcd_write_data
000216 98c0      	CBI  0x18,0
000217 c036      	RJMP _0x20C0004
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000218 d132      	RCALL SUBOPT_0x6
000219 931a      	ST   -Y,R17
                 _0x2020008:
00021a d133      	RCALL SUBOPT_0x7
00021b 91ed      	LD   R30,X+
00021c 83a9      	STD  Y+1,R26
00021d 83ba      	STD  Y+1+1,R27
00021e 2f1e      	MOV  R17,R30
00021f 30e0      	CPI  R30,0
000220 f019      	BREQ _0x202000A
000221 2fa1      	MOV  R26,R17
000222 dfe2      	RCALL _lcd_putchar
000223 cff6      	RJMP _0x2020008
                 _0x202000A:
                 _0x20C0005:
000224 8118      	LDD  R17,Y+0
000225 9623      	ADIW R28,3
000226 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000227 93aa      	ST   -Y,R26
000228 b3e7      	IN   R30,0x17
000229 6fe0      	ORI  R30,LOW(0xF0)
00022a bbe7      	OUT  0x17,R30
00022b 9aba      	SBI  0x17,2
00022c 9ab8      	SBI  0x17,0
00022d 9ab9      	SBI  0x17,1
00022e 98c2      	CBI  0x18,2
00022f 98c0      	CBI  0x18,0
000230 98c1      	CBI  0x18,1
000231 8078      	LDD  R7,Y+0
000232 81e8      	LD   R30,Y
000233 58e0      	SUBI R30,-LOW(128)
                +
000234 93e0 01b3+STS __base_y_G101 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G101,2
000236 81e8      	LD   R30,Y
000237 54e0      	SUBI R30,-LOW(192)
                +
000238 93e0 01b4+STS __base_y_G101 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G101,3
00023a e1a4      	LDI  R26,LOW(20)
00023b d123      	RCALL SUBOPT_0xB
00023c d128      	RCALL SUBOPT_0xD
00023d d127      	RCALL SUBOPT_0xD
00023e d126      	RCALL SUBOPT_0xD
00023f e2a0      	LDI  R26,LOW(32)
000240 df8f      	RCALL __lcd_write_nibble_G101
                +
000241 ec88     +LDI R24 , LOW ( 200 )
000242 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000243 9701     +SBIW R24 , 1
000244 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000245 e2a8      	LDI  R26,LOW(40)
000246 df97      	RCALL __lcd_write_data
000247 e0a4      	LDI  R26,LOW(4)
000248 df95      	RCALL __lcd_write_data
000249 e8a5      	LDI  R26,LOW(133)
00024a df93      	RCALL __lcd_write_data
00024b e0a6      	LDI  R26,LOW(6)
00024c df91      	RCALL __lcd_write_data
00024d dfa9      	RCALL _lcd_clear
                 _0x20C0004:
00024e 9621      	ADIW R28,1
00024f 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
000250 d0fa      	RCALL SUBOPT_0x6
000251 9724      	SBIW R28,4
000252 e0e0      	LDI  R30,LOW(0)
000253 83e8      	ST   Y,R30
000254 83e9      	STD  Y+1,R30
000255 83ea      	STD  Y+2,R30
000256 e3ef      	LDI  R30,LOW(63)
000257 83eb      	STD  Y+3,R30
000258 d3ad      	RCALL __SAVELOCR2
000259 85eb      	LDD  R30,Y+11
00025a 85fc      	LDD  R31,Y+11+1
00025b 3fef      	CPI  R30,LOW(0xFFFF)
00025c efaf      	LDI  R26,HIGH(0xFFFF)
00025d 07fa      	CPC  R31,R26
00025e f429      	BRNE _0x204000D
00025f d10c      	RCALL SUBOPT_0xE
                +
000260 e5a2     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
000261 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000262 d0bc      	RCALL _strcpyf
000263 c078      	RJMP _0x20C0003
                 _0x204000D:
000264 3fef      	CPI  R30,LOW(0x7FFF)
000265 e7af      	LDI  R26,HIGH(0x7FFF)
000266 07fa      	CPC  R31,R26
000267 f429      	BRNE _0x204000C
000268 d103      	RCALL SUBOPT_0xE
                +
000269 e5a3     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
00026a e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
00026b d0b3      	RCALL _strcpyf
00026c c06f      	RJMP _0x20C0003
                 _0x204000C:
00026d 85ac      	LDD  R26,Y+12
00026e 23aa      	TST  R26
00026f f432      	BRPL _0x204000F
000270 d0fe      	RCALL SUBOPT_0xF
000271 d1aa      	RCALL __ANEGF1
000272 d101      	RCALL SUBOPT_0x10
000273 d105      	RCALL SUBOPT_0x11
000274 e2ed      	LDI  R30,LOW(45)
000275 93ec      	ST   X,R30
                 _0x204000F:
000276 85a8      	LDD  R26,Y+8
000277 30a7      	CPI  R26,LOW(0x7)
000278 f010      	BRLO _0x2040010
000279 e0e6      	LDI  R30,LOW(6)
00027a 87e8      	STD  Y+8,R30
                 _0x2040010:
00027b 8518      	LDD  R17,Y+8
                 _0x2040011:
00027c 2fe1      	MOV  R30,R17
00027d 5011      	SUBI R17,1
00027e 30e0      	CPI  R30,0
00027f f021      	BREQ _0x2040013
000280 d0ff      	RCALL SUBOPT_0x12
000281 d103      	RCALL SUBOPT_0x13
000282 d108      	RCALL SUBOPT_0x14
000283 cff8      	RJMP _0x2040011
                 _0x2040013:
000284 d10b      	RCALL SUBOPT_0x15
000285 d23c      	RCALL __ADDF12
000286 d0ed      	RCALL SUBOPT_0x10
000287 e010      	LDI  R17,LOW(0)
                +
000288 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000289 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00028a e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00028b e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00028c d0fe      	RCALL SUBOPT_0x14
                 _0x2040014:
00028d d102      	RCALL SUBOPT_0x15
00028e d316      	RCALL __CMPF12
00028f f060      	BRLO _0x2040016
000290 d0ef      	RCALL SUBOPT_0x12
000291 d107      	RCALL SUBOPT_0x16
000292 d0f8      	RCALL SUBOPT_0x14
000293 5f1f      	SUBI R17,-LOW(1)
000294 3217      	CPI  R17,39
000295 f028      	BRLO _0x2040017
000296 d0d5      	RCALL SUBOPT_0xE
                +
000297 e5a7     +LDI R26 , LOW ( 2 * _0x2040000 + ( 5 ) )
000298 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW2FN _0x2040000,5
000299 d085      	RCALL _strcpyf
00029a c041      	RJMP _0x20C0003
                 _0x2040017:
00029b cff1      	RJMP _0x2040014
                 _0x2040016:
00029c 3010      	CPI  R17,0
00029d f421      	BRNE _0x2040018
00029e d0da      	RCALL SUBOPT_0x11
00029f e3e0      	LDI  R30,LOW(48)
0002a0 93ec      	ST   X,R30
0002a1 c01d      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
0002a2 2fe1      	MOV  R30,R17
0002a3 5011      	SUBI R17,1
0002a4 30e0      	CPI  R30,0
0002a5 f0c9      	BREQ _0x204001C
0002a6 d0d9      	RCALL SUBOPT_0x12
0002a7 d0dd      	RCALL SUBOPT_0x13
                +
0002a8 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0002a9 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0002aa e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0002ab e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0002ac d215      	RCALL __ADDF12
0002ad 01df      	MOVW R26,R30
0002ae 01cb      	MOVW R24,R22
0002af d05f      	RCALL _floor
0002b0 d0da      	RCALL SUBOPT_0x14
0002b1 d0de      	RCALL SUBOPT_0x15
0002b2 d2ad      	RCALL __DIVF21
0002b3 d19b      	RCALL __CFD1U
0002b4 2f0e      	MOV  R16,R30
0002b5 d0c3      	RCALL SUBOPT_0x11
0002b6 d0e8      	RCALL SUBOPT_0x17
0002b7 d0c8      	RCALL SUBOPT_0x12
0002b8 d085      	RCALL SUBOPT_0x4
0002b9 d258      	RCALL __MULF12
0002ba d0ea      	RCALL SUBOPT_0x18
0002bb d33b      	RCALL __SWAPD12
0002bc d1fe      	RCALL __SUBF12
0002bd d0b6      	RCALL SUBOPT_0x10
0002be cfe3      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
0002bf 85e8      	LDD  R30,Y+8
0002c0 30e0      	CPI  R30,0
0002c1 f0b1      	BREQ _0x20C0002
0002c2 d0b6      	RCALL SUBOPT_0x11
0002c3 e2ee      	LDI  R30,LOW(46)
0002c4 93ec      	ST   X,R30
                 _0x204001E:
0002c5 85e8      	LDD  R30,Y+8
0002c6 50e1      	SUBI R30,LOW(1)
0002c7 87e8      	STD  Y+8,R30
0002c8 5fef      	SUBI R30,-LOW(1)
0002c9 f071      	BREQ _0x2040020
0002ca d0da      	RCALL SUBOPT_0x18
0002cb d0cd      	RCALL SUBOPT_0x16
0002cc d0a7      	RCALL SUBOPT_0x10
0002cd d0a1      	RCALL SUBOPT_0xF
0002ce d180      	RCALL __CFD1U
0002cf 2f0e      	MOV  R16,R30
0002d0 d0a8      	RCALL SUBOPT_0x11
0002d1 d0cd      	RCALL SUBOPT_0x17
0002d2 d0d2      	RCALL SUBOPT_0x18
0002d3 d06a      	RCALL SUBOPT_0x4
0002d4 d322      	RCALL __SWAPD12
0002d5 d1e5      	RCALL __SUBF12
0002d6 d09d      	RCALL SUBOPT_0x10
0002d7 cfed      	RJMP _0x204001E
                 _0x2040020:
                 _0x20C0002:
0002d8 81ae      	LDD  R26,Y+6
0002d9 81bf      	LDD  R27,Y+6+1
0002da e0e0      	LDI  R30,LOW(0)
0002db 93ec      	ST   X,R30
                 _0x20C0003:
0002dc d32e      	RCALL __LOADLOCR2
0002dd 962d      	ADIW R28,13
0002de 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0002df d312      	RCALL __PUTPARD2
0002e0 817b         ldd  r23,y+3
0002e1 816a         ldd  r22,y+2
0002e2 81f9         ldd  r31,y+1
0002e3 81e8         ld   r30,y
0002e4 fb77         bst  r23,7
0002e5 0f77         lsl  r23
0002e6 fd67         sbrc r22,7
0002e7 6071         sbr  r23,1
0002e8 2f97         mov  r25,r23
0002e9 579e         subi r25,0x7e
0002ea f081         breq __ftrunc0
0002eb f078         brcs __ftrunc0
0002ec 3198         cpi  r25,24
0002ed f490         brsh __ftrunc1
0002ee 27aa         clr  r26
0002ef 27bb         clr  r27
0002f0 2788         clr  r24
                 __ftrunc2:
0002f1 9408         sec
0002f2 9587         ror  r24
0002f3 95b7         ror  r27
0002f4 95a7         ror  r26
0002f5 959a         dec  r25
0002f6 f7d1         brne __ftrunc2
0002f7 23ea         and  r30,r26
0002f8 23fb         and  r31,r27
0002f9 2368         and  r22,r24
0002fa c005         rjmp __ftrunc1
                 __ftrunc0:
0002fb 94e8         clt
0002fc 2777         clr  r23
0002fd 27ee         clr  r30
0002fe 27ff         clr  r31
0002ff 2766         clr  r22
                 __ftrunc1:
000300 776f         cbr  r22,0x80
000301 9576         lsr  r23
000302 f408         brcc __ftrunc3
000303 6860         sbr  r22,0x80
                 __ftrunc3:
000304 f977         bld  r23,7
000305 91a9         ld   r26,y+
000306 91b9         ld   r27,y+
000307 9189         ld   r24,y+
000308 9199         ld   r25,y+
000309 17ea         cp   r30,r26
00030a 07fb         cpc  r31,r27
00030b 0768         cpc  r22,r24
00030c 0779         cpc  r23,r25
00030d fb97         bst  r25,7
00030e 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
00030f d2e2      	RCALL __PUTPARD2
000310 d2d2      	RCALL __GETD2S0
000311 dfcd      	RCALL _ftrunc
000312 d2d5      	RCALL __PUTD1S0
000313 f411          brne __floor1
                 __floor0:
000314 d095      	RCALL SUBOPT_0x19
000315 c007      	RJMP _0x20C0001
                 __floor1:
000316 f7ee          brtc __floor0
000317 d092      	RCALL SUBOPT_0x19
                +
000318 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000319 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00031a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00031b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00031c d19e      	RCALL __SUBF12
                 _0x20C0001:
00031d 9624      	ADIW R28,4
00031e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
00031f d02b      	RCALL SUBOPT_0x6
000320 91e9          ld   r30,y+
000321 91f9          ld   r31,y+
000322 91a9          ld   r26,y+
000323 91b9          ld   r27,y+
000324 01cd          movw r24,r26
                 strcpyf0:
000325 9005      	lpm  r0,z+
000326 920d          st   x+,r0
000327 2000          tst  r0
000328 f7e1          brne strcpyf0
000329 01fc          movw r30,r24
00032a 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 ___ds18b20_scratch_pad:
000178           	.BYTE 0x9
                 _temper:
000181           	.BYTE 0x4
                 _Dtemper:
000185           	.BYTE 0x4
                 _lcd_buffer:
000189           	.BYTE 0x14
                 _lcd_buffer2:
00019d           	.BYTE 0x14
                 __base_y_G101:
0001b1           	.BYTE 0x4
                 __seed_G102:
0001b5           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
00032b e0e0      	LDI  R30,LOW(0)
00032c 93ea      	ST   -Y,R30
00032d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1:
00032e 91e0 0185 	LDS  R30,_Dtemper
000330 91f0 0186 	LDS  R31,_Dtemper+1
000332 9160 0187 	LDS  R22,_Dtemper+2
000334 9170 0188 	LDS  R23,_Dtemper+3
000336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000337 e0e0      	LDI  R30,LOW(0)
000338 bded      	OUT  0x2D,R30
000339 bdec      	OUT  0x2C,R30
00033a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3:
00033b 93fa      	ST   -Y,R31
00033c 93ea      	ST   -Y,R30
00033d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x4:
00033e d28e      	RCALL __CWD1
00033f d148      	RCALL __CDF1
000340 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x5:
000341 91a0 0181 	LDS  R26,_temper
000343 91b0 0182 	LDS  R27,_temper+1
000345 9180 0183 	LDS  R24,_temper+2
000347 9190 0184 	LDS  R25,_temper+3
000349 d25b      	RCALL __CMPF12
00034a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6:
00034b 93ba      	ST   -Y,R27
00034c 93aa      	ST   -Y,R26
00034d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x7:
00034e 81a9      	LDD  R26,Y+1
00034f 81ba      	LDD  R27,Y+1+1
000350 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
000351 ddd2      	RCALL _ds18b20_select
000352 30e0      	CPI  R30,0
000353 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x9:
                +
000354 e0e0     +LDI R30 , LOW ( 0xC61C3C00 )
000355 e3fc     +LDI R31 , HIGH ( 0xC61C3C00 )
000356 e16c     +LDI R22 , BYTE3 ( 0xC61C3C00 )
000357 ec76     +LDI R23 , BYTE4 ( 0xC61C3C00 )
                 	__GETD1N 0xC61C3C00
000358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xA:
000359 e0f0      	LDI  R31,0
00035a 0fee      	LSL  R30
00035b 1fff      	ROL  R31
00035c 0fea      	ADD  R30,R26
00035d 1ffb      	ADC  R31,R27
00035e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
00035f e0b0      	LDI  R27,0
000360 c04b      	RJMP _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC:
                +
000361 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000362 958a     +DEC R24
000363 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000364 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0xD:
000365 e3a0      	LDI  R26,LOW(48)
000366 de69      	RCALL __lcd_write_nibble_G101
                +
000367 ec88     +LDI R24 , LOW ( 200 )
000368 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000369 9701     +SBIW R24 , 1
00036a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00036b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00036c 81ee      	LDD  R30,Y+6
00036d 81ff      	LDD  R31,Y+6+1
00036e cfcc      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
00036f 85e9     +LDD R30 , Y + 9
000370 85fa     +LDD R31 , Y + 9 + 1
000371 856b     +LDD R22 , Y + 9 + 2
000372 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x10:
                +
000374 87e9     +STD Y + 9 , R30
000375 87fa     +STD Y + 9 + 1 , R31
000376 876b     +STD Y + 9 + 2 , R22
000377 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000378 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x11:
000379 81ae      	LDD  R26,Y+6
00037a 81bf      	LDD  R27,Y+6+1
00037b 9611      	ADIW R26,1
00037c 83ae      	STD  Y+6,R26
00037d 83bf      	STD  Y+6+1,R27
00037e 9711      	SBIW R26,1
00037f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12:
                +
000380 81aa     +LDD R26 , Y + 2
000381 81bb     +LDD R27 , Y + 2 + 1
000382 818c     +LDD R24 , Y + 2 + 2
000383 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000384 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x13:
                +
000385 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000386 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000387 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000388 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000389 d188      	RCALL __MULF12
00038a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14:
                +
00038b 83ea     +STD Y + 2 , R30
00038c 83fb     +STD Y + 2 + 1 , R31
00038d 836c     +STD Y + 2 + 2 , R22
00038e 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00038f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x15:
                +
000390 81ea     +LDD R30 , Y + 2
000391 81fb     +LDD R31 , Y + 2 + 1
000392 816c     +LDD R22 , Y + 2 + 2
000393 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000394 85a9     +LDD R26 , Y + 9
000395 85ba     +LDD R27 , Y + 9 + 1
000396 858b     +LDD R24 , Y + 9 + 2
000397 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000398 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
                +
000399 e0e0     +LDI R30 , LOW ( 0x41200000 )
00039a e0f0     +LDI R31 , HIGH ( 0x41200000 )
00039b e260     +LDI R22 , BYTE3 ( 0x41200000 )
00039c e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00039d d174      	RCALL __MULF12
00039e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00039f 2fe0      	MOV  R30,R16
0003a0 5de0      	SUBI R30,-LOW(48)
0003a1 93ec      	ST   X,R30
0003a2 2fe0      	MOV  R30,R16
0003a3 e0f0      	LDI  R31,0
0003a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x18:
                +
0003a5 85a9     +LDD R26 , Y + 9
0003a6 85ba     +LDD R27 , Y + 9 + 1
0003a7 858b     +LDD R24 , Y + 9 + 2
0003a8 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0003a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19:
0003aa d233      	RCALL __GETD1S0
0003ab 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003ac 9610      	adiw r26,0
0003ad f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003ae ed80     +LDI R24 , LOW ( 0x7D0 )
0003af e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0003b0 9701     +SBIW R24 , 1
0003b1 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0003b2 95a8      	wdr
0003b3 9711      	sbiw r26,1
0003b4 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003b5 9508      	ret
                 
                 	.equ __w1_port=0x12
                 	.equ __w1_bit=0x00
                 
                 _w1_init:
0003b6 27ee      	clr  r30
0003b7 9890      	cbi  __w1_port,__w1_bit
0003b8 9a88      	sbi  __w1_port-1,__w1_bit
                +
0003b9 ec80     +LDI R24 , LOW ( 0x3C0 )
0003ba e093     +LDI R25 , HIGH ( 0x3C0 )
                +__DELAY_USW_LOOP :
0003bb 9701     +SBIW R24 , 1
0003bc f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x3C0
0003bd 9888      	cbi  __w1_port-1,__w1_bit
                +
0003be e285     +LDI R24 , LOW ( 0x25 )
                +__DELAY_USB_LOOP :
0003bf 958a     +DEC R24
0003c0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x25
0003c1 9b80      	sbis __w1_port-2,__w1_bit
0003c2 9508      	ret
                +
0003c3 ec8b     +LDI R24 , LOW ( 0xCB )
                +__DELAY_USB_LOOP :
0003c4 958a     +DEC R24
0003c5 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xCB
0003c6 9b80      	sbis __w1_port-2,__w1_bit
0003c7 e0e1      	ldi  r30,1
                +
0003c8 e08c     +LDI R24 , LOW ( 0x30C )
0003c9 e093     +LDI R25 , HIGH ( 0x30C )
                +__DELAY_USW_LOOP :
0003ca 9701     +SBIW R24 , 1
0003cb f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x30C
0003cc 9508      	ret
                 
                 __w1_read_bit:
0003cd 9a88      	sbi  __w1_port-1,__w1_bit
                +
0003ce e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
0003cf 958a     +DEC R24
0003d0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
0003d1 9888      	cbi  __w1_port-1,__w1_bit
                +
0003d2 e18d     +LDI R24 , LOW ( 0x1D )
                +__DELAY_USB_LOOP :
0003d3 958a     +DEC R24
0003d4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x1D
0003d5 9488      	clc
0003d6 9980      	sbic __w1_port-2,__w1_bit
0003d7 9408      	sec
0003d8 95e7      	ror  r30
                +
0003d9 ed85     +LDI R24 , LOW ( 0xD5 )
                +__DELAY_USB_LOOP :
0003da 958a     +DEC R24
0003db f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD5
0003dc 9508      	ret
                 
                 __w1_write_bit:
0003dd 94e8      	clt
0003de 9a88      	sbi  __w1_port-1,__w1_bit
                +
0003df e085     +LDI R24 , LOW ( 0x5 )
                +__DELAY_USB_LOOP :
0003e0 958a     +DEC R24
0003e1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x5
0003e2 fd70      	sbrc r23,0
0003e3 9888      	cbi  __w1_port-1,__w1_bit
                +
0003e4 e283     +LDI R24 , LOW ( 0x23 )
                +__DELAY_USB_LOOP :
0003e5 958a     +DEC R24
0003e6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0x23
0003e7 9980      	sbic __w1_port-2,__w1_bit
0003e8 c003      	rjmp __w1_write_bit0
0003e9 ff70      	sbrs r23,0
0003ea c003      	rjmp __w1_write_bit1
0003eb 9508      	ret
                 __w1_write_bit0:
0003ec ff70      	sbrs r23,0
0003ed 9508      	ret
                 __w1_write_bit1:
                +
0003ee ec88     +LDI R24 , LOW ( 0xC8 )
                +__DELAY_USB_LOOP :
0003ef 958a     +DEC R24
0003f0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xC8
0003f1 9888      	cbi  __w1_port-1,__w1_bit
                +
0003f2 e08d     +LDI R24 , LOW ( 0xD )
                +__DELAY_USB_LOOP :
0003f3 958a     +DEC R24
0003f4 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 0xD
0003f5 9468      	set
0003f6 9508      	ret
                 
                 _w1_read:
0003f7 e068      	ldi  r22,8
                 	__w1_read0:
0003f8 dfd4      	rcall __w1_read_bit
0003f9 956a      	dec  r22
0003fa f7e9      	brne __w1_read0
0003fb 9508      	ret
                 
                 _w1_write:
0003fc 2f7a      	mov  r23,r26
0003fd e068      	ldi  r22,8
0003fe 27ee      	clr  r30
                 __w1_write0:
0003ff dfdd      	rcall __w1_write_bit
000400 f426      	brtc __w1_write1
000401 9577      	ror  r23
000402 956a      	dec  r22
000403 f7d9      	brne __w1_write0
000404 95e3      	inc  r30
                 __w1_write1:
000405 9508      	ret
                 
                 _w1_dow_crc8:
000406 27ee      	clr  r30
000407 23aa      	tst  r26
000408 f089      	breq __w1_dow_crc83
000409 2f8a      	mov  r24,r26
00040a e168      	ldi  r22,0x18
00040b 81a8      	ld   r26,y
00040c 81b9      	ldd  r27,y+1
                 __w1_dow_crc80:
00040d e098      	ldi  r25,8
00040e 91fd      	ld   r31,x+
                 __w1_dow_crc81:
00040f 2f7f      	mov  r23,r31
000410 277e      	eor  r23,r30
000411 9577      	ror  r23
000412 f408      	brcc __w1_dow_crc82
000413 27e6      	eor  r30,r22
                 __w1_dow_crc82:
000414 95e7      	ror  r30
000415 95f6      	lsr  r31
000416 959a      	dec  r25
000417 f7b9      	brne __w1_dow_crc81
000418 958a      	dec  r24
000419 f799      	brne __w1_dow_crc80
                 __w1_dow_crc83:
00041a 9622      	adiw r28,2
00041b 9508      	ret
                 
                 __ANEGF1:
00041c 9730      	SBIW R30,0
00041d 4060      	SBCI R22,0
00041e 4070      	SBCI R23,0
00041f f009      	BREQ __ANEGF10
000420 5870      	SUBI R23,0x80
                 __ANEGF10:
000421 9508      	RET
                 
                 __ROUND_REPACK:
000422 2355      	TST  R21
000423 f442      	BRPL __REPACK
000424 3850      	CPI  R21,0x80
000425 f411      	BRNE __ROUND_REPACK0
000426 ffe0      	SBRS R30,0
000427 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000428 9631      	ADIW R30,1
000429 1f69      	ADC  R22,R25
00042a 1f79      	ADC  R23,R25
00042b f06b      	BRVS __REPACK1
                 
                 __REPACK:
00042c e850      	LDI  R21,0x80
00042d 2757      	EOR  R21,R23
00042e f411      	BRNE __REPACK0
00042f 935f      	PUSH R21
000430 c0cf      	RJMP __ZERORES
                 __REPACK0:
000431 3f5f      	CPI  R21,0xFF
000432 f031      	BREQ __REPACK1
000433 0f66      	LSL  R22
000434 0c00      	LSL  R0
000435 9557      	ROR  R21
000436 9567      	ROR  R22
000437 2f75      	MOV  R23,R21
000438 9508      	RET
                 __REPACK1:
000439 935f      	PUSH R21
00043a 2000      	TST  R0
00043b f00a      	BRMI __REPACK2
00043c c0cf      	RJMP __MAXRES
                 __REPACK2:
00043d c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00043e e850      	LDI  R21,0x80
00043f 2e19      	MOV  R1,R25
000440 2215      	AND  R1,R21
000441 0f88      	LSL  R24
000442 1f99      	ROL  R25
000443 2795      	EOR  R25,R21
000444 0f55      	LSL  R21
000445 9587      	ROR  R24
                 
                 __UNPACK1:
000446 e850      	LDI  R21,0x80
000447 2e07      	MOV  R0,R23
000448 2205      	AND  R0,R21
000449 0f66      	LSL  R22
00044a 1f77      	ROL  R23
00044b 2775      	EOR  R23,R21
00044c 0f55      	LSL  R21
00044d 9567      	ROR  R22
00044e 9508      	RET
                 
                 __CFD1U:
00044f 9468      	SET
000450 c001      	RJMP __CFD1U0
                 __CFD1:
000451 94e8      	CLT
                 __CFD1U0:
000452 935f      	PUSH R21
000453 dff2      	RCALL __UNPACK1
000454 3870      	CPI  R23,0x80
000455 f018      	BRLO __CFD10
000456 3f7f      	CPI  R23,0xFF
000457 f408      	BRCC __CFD10
000458 c0a7      	RJMP __ZERORES
                 __CFD10:
000459 e156      	LDI  R21,22
00045a 1b57      	SUB  R21,R23
00045b f4aa      	BRPL __CFD11
00045c 9551      	NEG  R21
00045d 3058      	CPI  R21,8
00045e f40e      	BRTC __CFD19
00045f 3059      	CPI  R21,9
                 __CFD19:
000460 f030      	BRLO __CFD17
000461 efef      	SER  R30
000462 efff      	SER  R31
000463 ef6f      	SER  R22
000464 e77f      	LDI  R23,0x7F
000465 f977      	BLD  R23,7
000466 c01a      	RJMP __CFD15
                 __CFD17:
000467 2777      	CLR  R23
000468 2355      	TST  R21
000469 f0b9      	BREQ __CFD15
                 __CFD18:
00046a 0fee      	LSL  R30
00046b 1fff      	ROL  R31
00046c 1f66      	ROL  R22
00046d 1f77      	ROL  R23
00046e 955a      	DEC  R21
00046f f7d1      	BRNE __CFD18
000470 c010      	RJMP __CFD15
                 __CFD11:
000471 2777      	CLR  R23
                 __CFD12:
000472 3058      	CPI  R21,8
000473 f028      	BRLO __CFD13
000474 2fef      	MOV  R30,R31
000475 2ff6      	MOV  R31,R22
000476 2f67      	MOV  R22,R23
000477 5058      	SUBI R21,8
000478 cff9      	RJMP __CFD12
                 __CFD13:
000479 2355      	TST  R21
00047a f031      	BREQ __CFD15
                 __CFD14:
00047b 9576      	LSR  R23
00047c 9567      	ROR  R22
00047d 95f7      	ROR  R31
00047e 95e7      	ROR  R30
00047f 955a      	DEC  R21
000480 f7d1      	BRNE __CFD14
                 __CFD15:
000481 2000      	TST  R0
000482 f40a      	BRPL __CFD16
000483 d141      	RCALL __ANEGD1
                 __CFD16:
000484 915f      	POP  R21
000485 9508      	RET
                 
                 __CDF1U:
000486 9468      	SET
000487 c001      	RJMP __CDF1U0
                 __CDF1:
000488 94e8      	CLT
                 __CDF1U0:
000489 9730      	SBIW R30,0
00048a 4060      	SBCI R22,0
00048b 4070      	SBCI R23,0
00048c f0b1      	BREQ __CDF10
00048d 2400      	CLR  R0
00048e f026      	BRTS __CDF11
00048f 2377      	TST  R23
000490 f412      	BRPL __CDF11
000491 9400      	COM  R0
000492 d132      	RCALL __ANEGD1
                 __CDF11:
000493 2e17      	MOV  R1,R23
000494 e17e      	LDI  R23,30
000495 2011      	TST  R1
                 __CDF12:
000496 f032      	BRMI __CDF13
000497 957a      	DEC  R23
000498 0fee      	LSL  R30
000499 1fff      	ROL  R31
00049a 1f66      	ROL  R22
00049b 1c11      	ROL  R1
00049c cff9      	RJMP __CDF12
                 __CDF13:
00049d 2fef      	MOV  R30,R31
00049e 2ff6      	MOV  R31,R22
00049f 2d61      	MOV  R22,R1
0004a0 935f      	PUSH R21
0004a1 df8a      	RCALL __REPACK
0004a2 915f      	POP  R21
                 __CDF10:
0004a3 9508      	RET
                 
                 __SWAPACC:
0004a4 934f      	PUSH R20
0004a5 01af      	MOVW R20,R30
0004a6 01fd      	MOVW R30,R26
0004a7 01da      	MOVW R26,R20
0004a8 01ab      	MOVW R20,R22
0004a9 01bc      	MOVW R22,R24
0004aa 01ca      	MOVW R24,R20
0004ab 2d40      	MOV  R20,R0
0004ac 2c01      	MOV  R0,R1
0004ad 2e14      	MOV  R1,R20
0004ae 914f      	POP  R20
0004af 9508      	RET
                 
                 __UADD12:
0004b0 0fea      	ADD  R30,R26
0004b1 1ffb      	ADC  R31,R27
0004b2 1f68      	ADC  R22,R24
0004b3 9508      	RET
                 
                 __NEGMAN1:
0004b4 95e0      	COM  R30
0004b5 95f0      	COM  R31
0004b6 9560      	COM  R22
0004b7 5fef      	SUBI R30,-1
0004b8 4fff      	SBCI R31,-1
0004b9 4f6f      	SBCI R22,-1
0004ba 9508      	RET
                 
                 __SUBF12:
0004bb 935f      	PUSH R21
0004bc df81      	RCALL __UNPACK
0004bd 3890      	CPI  R25,0x80
0004be f171      	BREQ __ADDF129
0004bf e850      	LDI  R21,0x80
0004c0 2615      	EOR  R1,R21
                 
0004c1 c004      	RJMP __ADDF120
                 
                 __ADDF12:
0004c2 935f      	PUSH R21
0004c3 df7a      	RCALL __UNPACK
0004c4 3890      	CPI  R25,0x80
0004c5 f139      	BREQ __ADDF129
                 
                 __ADDF120:
0004c6 3870      	CPI  R23,0x80
0004c7 f121      	BREQ __ADDF128
                 __ADDF121:
0004c8 2f57      	MOV  R21,R23
0004c9 1b59      	SUB  R21,R25
0004ca f12b      	BRVS __ADDF1211
0004cb f412      	BRPL __ADDF122
0004cc dfd7      	RCALL __SWAPACC
0004cd cffa      	RJMP __ADDF121
                 __ADDF122:
0004ce 3158      	CPI  R21,24
0004cf f018      	BRLO __ADDF123
0004d0 27aa      	CLR  R26
0004d1 27bb      	CLR  R27
0004d2 2788      	CLR  R24
                 __ADDF123:
0004d3 3058      	CPI  R21,8
0004d4 f028      	BRLO __ADDF124
0004d5 2fab      	MOV  R26,R27
0004d6 2fb8      	MOV  R27,R24
0004d7 2788      	CLR  R24
0004d8 5058      	SUBI R21,8
0004d9 cff9      	RJMP __ADDF123
                 __ADDF124:
0004da 2355      	TST  R21
0004db f029      	BREQ __ADDF126
                 __ADDF125:
0004dc 9586      	LSR  R24
0004dd 95b7      	ROR  R27
0004de 95a7      	ROR  R26
0004df 955a      	DEC  R21
0004e0 f7d9      	BRNE __ADDF125
                 __ADDF126:
0004e1 2d50      	MOV  R21,R0
0004e2 2551      	EOR  R21,R1
0004e3 f072      	BRMI __ADDF127
0004e4 dfcb      	RCALL __UADD12
0004e5 f438      	BRCC __ADDF129
0004e6 9567      	ROR  R22
0004e7 95f7      	ROR  R31
0004e8 95e7      	ROR  R30
0004e9 9573      	INC  R23
0004ea f413      	BRVC __ADDF129
0004eb c020      	RJMP __MAXRES
                 __ADDF128:
0004ec dfb7      	RCALL __SWAPACC
                 __ADDF129:
0004ed df3e      	RCALL __REPACK
0004ee 915f      	POP  R21
0004ef 9508      	RET
                 __ADDF1211:
0004f0 f7d8      	BRCC __ADDF128
0004f1 cffb      	RJMP __ADDF129
                 __ADDF127:
0004f2 1bea      	SUB  R30,R26
0004f3 0bfb      	SBC  R31,R27
0004f4 0b68      	SBC  R22,R24
0004f5 f051      	BREQ __ZERORES
0004f6 f410      	BRCC __ADDF1210
0004f7 9400      	COM  R0
0004f8 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0004f9 2366      	TST  R22
0004fa f392      	BRMI __ADDF129
0004fb 0fee      	LSL  R30
0004fc 1fff      	ROL  R31
0004fd 1f66      	ROL  R22
0004fe 957a      	DEC  R23
0004ff f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000500 27ee      	CLR  R30
000501 27ff      	CLR  R31
000502 2766      	CLR  R22
000503 2777      	CLR  R23
000504 915f      	POP  R21
000505 9508      	RET
                 
                 __MINRES:
000506 efef      	SER  R30
000507 efff      	SER  R31
000508 e76f      	LDI  R22,0x7F
000509 ef7f      	SER  R23
00050a 915f      	POP  R21
00050b 9508      	RET
                 
                 __MAXRES:
00050c efef      	SER  R30
00050d efff      	SER  R31
00050e e76f      	LDI  R22,0x7F
00050f e77f      	LDI  R23,0x7F
000510 915f      	POP  R21
000511 9508      	RET
                 
                 __MULF12:
000512 935f      	PUSH R21
000513 df2a      	RCALL __UNPACK
000514 3870      	CPI  R23,0x80
000515 f351      	BREQ __ZERORES
000516 3890      	CPI  R25,0x80
000517 f341      	BREQ __ZERORES
000518 2401      	EOR  R0,R1
000519 9408      	SEC
00051a 1f79      	ADC  R23,R25
00051b f423      	BRVC __MULF124
00051c f31c      	BRLT __ZERORES
                 __MULF125:
00051d 2000      	TST  R0
00051e f33a      	BRMI __MINRES
00051f cfec      	RJMP __MAXRES
                 __MULF124:
000520 920f      	PUSH R0
000521 931f      	PUSH R17
000522 932f      	PUSH R18
000523 933f      	PUSH R19
000524 934f      	PUSH R20
000525 2711      	CLR  R17
000526 2722      	CLR  R18
000527 2799      	CLR  R25
000528 9f68      	MUL  R22,R24
000529 01a0      	MOVW R20,R0
00052a 9f8f      	MUL  R24,R31
00052b 2d30      	MOV  R19,R0
00052c 0d41      	ADD  R20,R1
00052d 1f59      	ADC  R21,R25
00052e 9f6b      	MUL  R22,R27
00052f 0d30      	ADD  R19,R0
000530 1d41      	ADC  R20,R1
000531 1f59      	ADC  R21,R25
000532 9f8e      	MUL  R24,R30
000533 d027      	RCALL __MULF126
000534 9fbf      	MUL  R27,R31
000535 d025      	RCALL __MULF126
000536 9f6a      	MUL  R22,R26
000537 d023      	RCALL __MULF126
000538 9fbe      	MUL  R27,R30
000539 d01d      	RCALL __MULF127
00053a 9faf      	MUL  R26,R31
00053b d01b      	RCALL __MULF127
00053c 9fae      	MUL  R26,R30
00053d 0d11      	ADD  R17,R1
00053e 1f29      	ADC  R18,R25
00053f 1f39      	ADC  R19,R25
000540 1f49      	ADC  R20,R25
000541 1f59      	ADC  R21,R25
000542 2fe3      	MOV  R30,R19
000543 2ff4      	MOV  R31,R20
000544 2f65      	MOV  R22,R21
000545 2f52      	MOV  R21,R18
000546 914f      	POP  R20
000547 913f      	POP  R19
000548 912f      	POP  R18
000549 911f      	POP  R17
00054a 900f      	POP  R0
00054b 2366      	TST  R22
00054c f02a      	BRMI __MULF122
00054d 0f55      	LSL  R21
00054e 1fee      	ROL  R30
00054f 1fff      	ROL  R31
000550 1f66      	ROL  R22
000551 c002      	RJMP __MULF123
                 __MULF122:
000552 9573      	INC  R23
000553 f24b      	BRVS __MULF125
                 __MULF123:
000554 decd      	RCALL __ROUND_REPACK
000555 915f      	POP  R21
000556 9508      	RET
                 
                 __MULF127:
000557 0d10      	ADD  R17,R0
000558 1d21      	ADC  R18,R1
000559 1f39      	ADC  R19,R25
00055a c002      	RJMP __MULF128
                 __MULF126:
00055b 0d20      	ADD  R18,R0
00055c 1d31      	ADC  R19,R1
                 __MULF128:
00055d 1f49      	ADC  R20,R25
00055e 1f59      	ADC  R21,R25
00055f 9508      	RET
                 
                 __DIVF21:
000560 935f      	PUSH R21
000561 dedc      	RCALL __UNPACK
000562 3870      	CPI  R23,0x80
000563 f421      	BRNE __DIVF210
000564 2011      	TST  R1
                 __DIVF211:
000565 f40a      	BRPL __DIVF219
000566 cf9f      	RJMP __MINRES
                 __DIVF219:
000567 cfa4      	RJMP __MAXRES
                 __DIVF210:
000568 3890      	CPI  R25,0x80
000569 f409      	BRNE __DIVF218
                 __DIVF217:
00056a cf95      	RJMP __ZERORES
                 __DIVF218:
00056b 2401      	EOR  R0,R1
00056c 9408      	SEC
00056d 0b97      	SBC  R25,R23
00056e f41b      	BRVC __DIVF216
00056f f3d4      	BRLT __DIVF217
000570 2000      	TST  R0
000571 cff3      	RJMP __DIVF211
                 __DIVF216:
000572 2f79      	MOV  R23,R25
000573 931f      	PUSH R17
000574 932f      	PUSH R18
000575 933f      	PUSH R19
000576 934f      	PUSH R20
000577 2411      	CLR  R1
000578 2711      	CLR  R17
000579 2722      	CLR  R18
00057a 2733      	CLR  R19
00057b 2744      	CLR  R20
00057c 2755      	CLR  R21
00057d e290      	LDI  R25,32
                 __DIVF212:
00057e 17ae      	CP   R26,R30
00057f 07bf      	CPC  R27,R31
000580 0786      	CPC  R24,R22
000581 0741      	CPC  R20,R17
000582 f030      	BRLO __DIVF213
000583 1bae      	SUB  R26,R30
000584 0bbf      	SBC  R27,R31
000585 0b86      	SBC  R24,R22
000586 0b41      	SBC  R20,R17
000587 9408      	SEC
000588 c001      	RJMP __DIVF214
                 __DIVF213:
000589 9488      	CLC
                 __DIVF214:
00058a 1f55      	ROL  R21
00058b 1f22      	ROL  R18
00058c 1f33      	ROL  R19
00058d 1c11      	ROL  R1
00058e 1faa      	ROL  R26
00058f 1fbb      	ROL  R27
000590 1f88      	ROL  R24
000591 1f44      	ROL  R20
000592 959a      	DEC  R25
000593 f751      	BRNE __DIVF212
000594 01f9      	MOVW R30,R18
000595 2d61      	MOV  R22,R1
000596 914f      	POP  R20
000597 913f      	POP  R19
000598 912f      	POP  R18
000599 911f      	POP  R17
00059a 2366      	TST  R22
00059b f032      	BRMI __DIVF215
00059c 0f55      	LSL  R21
00059d 1fee      	ROL  R30
00059e 1fff      	ROL  R31
00059f 1f66      	ROL  R22
0005a0 957a      	DEC  R23
0005a1 f243      	BRVS __DIVF217
                 __DIVF215:
0005a2 de7f      	RCALL __ROUND_REPACK
0005a3 915f      	POP  R21
0005a4 9508      	RET
                 
                 __CMPF12:
0005a5 2399      	TST  R25
0005a6 f09a      	BRMI __CMPF120
0005a7 2377      	TST  R23
0005a8 f042      	BRMI __CMPF121
0005a9 1797      	CP   R25,R23
0005aa f048      	BRLO __CMPF122
0005ab f429      	BRNE __CMPF121
0005ac 17ae      	CP   R26,R30
0005ad 07bf      	CPC  R27,R31
0005ae 0786      	CPC  R24,R22
0005af f020      	BRLO __CMPF122
0005b0 f031      	BREQ __CMPF123
                 __CMPF121:
0005b1 9498      	CLZ
0005b2 9488      	CLC
0005b3 9508      	RET
                 __CMPF122:
0005b4 9498      	CLZ
0005b5 9408      	SEC
0005b6 9508      	RET
                 __CMPF123:
0005b7 9418      	SEZ
0005b8 9488      	CLC
0005b9 9508      	RET
                 __CMPF120:
0005ba 2377      	TST  R23
0005bb f7c2      	BRPL __CMPF122
0005bc 1797      	CP   R25,R23
0005bd f398      	BRLO __CMPF121
0005be f7a9      	BRNE __CMPF122
0005bf 17ea      	CP   R30,R26
0005c0 07fb      	CPC  R31,R27
0005c1 0768      	CPC  R22,R24
0005c2 f388      	BRLO __CMPF122
0005c3 f399      	BREQ __CMPF123
0005c4 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
0005c5 95f0      	COM  R31
0005c6 9560      	COM  R22
0005c7 9570      	COM  R23
0005c8 95e1      	NEG  R30
0005c9 4fff      	SBCI R31,-1
0005ca 4f6f      	SBCI R22,-1
0005cb 4f7f      	SBCI R23,-1
0005cc 9508      	RET
                 
                 __CWD1:
0005cd 2f6f      	MOV  R22,R31
0005ce 0f66      	ADD  R22,R22
0005cf 0b66      	SBC  R22,R22
0005d0 2f76      	MOV  R23,R22
0005d1 9508      	RET
                 
                 __LNEGB1:
0005d2 23ee      	TST  R30
0005d3 e0e1      	LDI  R30,1
0005d4 f009      	BREQ __LNEGB1F
0005d5 27ee      	CLR  R30
                 __LNEGB1F:
0005d6 9508      	RET
                 
                 __GETW1PF:
0005d7 9005      	LPM  R0,Z+
0005d8 91f4      	LPM  R31,Z
0005d9 2de0      	MOV  R30,R0
0005da 9508      	RET
                 
                 __GETW2PF:
0005db 91a5      	LPM  R26,Z+
0005dc 91b4      	LPM  R27,Z
0005dd 9508      	RET
                 
                 __GETD1S0:
0005de 81e8      	LD   R30,Y
0005df 81f9      	LDD  R31,Y+1
0005e0 816a      	LDD  R22,Y+2
0005e1 817b      	LDD  R23,Y+3
0005e2 9508      	RET
                 
                 __GETD2S0:
0005e3 81a8      	LD   R26,Y
0005e4 81b9      	LDD  R27,Y+1
0005e5 818a      	LDD  R24,Y+2
0005e6 819b      	LDD  R25,Y+3
0005e7 9508      	RET
                 
                 __PUTD1S0:
0005e8 83e8      	ST   Y,R30
0005e9 83f9      	STD  Y+1,R31
0005ea 836a      	STD  Y+2,R22
0005eb 837b      	STD  Y+3,R23
0005ec 9508      	RET
                 
                 __PUTPARD1:
0005ed 937a      	ST   -Y,R23
0005ee 936a      	ST   -Y,R22
0005ef 93fa      	ST   -Y,R31
0005f0 93ea      	ST   -Y,R30
0005f1 9508      	RET
                 
                 __PUTPARD2:
0005f2 939a      	ST   -Y,R25
0005f3 938a      	ST   -Y,R24
0005f4 93ba      	ST   -Y,R27
0005f5 93aa      	ST   -Y,R26
0005f6 9508      	RET
                 
                 __SWAPD12:
0005f7 2e18      	MOV  R1,R24
0005f8 2f86      	MOV  R24,R22
0005f9 2d61      	MOV  R22,R1
0005fa 2e19      	MOV  R1,R25
0005fb 2f97      	MOV  R25,R23
0005fc 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0005fd 2e1b      	MOV  R1,R27
0005fe 2fbf      	MOV  R27,R31
0005ff 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000600 2e1a      	MOV  R1,R26
000601 2fae      	MOV  R26,R30
000602 2de1      	MOV  R30,R1
000603 9508      	RET
                 
                 __SAVELOCR4:
000604 933a      	ST   -Y,R19
                 __SAVELOCR3:
000605 932a      	ST   -Y,R18
                 __SAVELOCR2:
000606 931a      	ST   -Y,R17
000607 930a      	ST   -Y,R16
000608 9508      	RET
                 
                 __LOADLOCR4:
000609 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00060a 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00060b 8119      	LDD  R17,Y+1
00060c 8108      	LD   R16,Y
00060d 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :  33 r1 :  32 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:   6 r17:  36 r18:  17 r19:  17 r20:  22 r21:  63 r22:  85 r23:  81 
r24:  84 r25:  58 r26: 142 r27:  66 r28:  10 r29:   1 r30: 255 r31:  78 
x  :  13 y  : 176 z  :  13 
Registers used: 25 out of 35 (71.4%)

ATmega8 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  18 add   :   9 
adiw  :  11 and   :   7 andi  :   5 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   7 brcs  :   1 break :   0 breq  :  29 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  16 
brlt  :   2 brmi  :   9 brne  :  51 brpl  :   8 brsh  :   2 brtc  :   3 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   2 cbi   :  11 
cbr   :   1 clc   :   4 clh   :   0 cli   :   1 cln   :   0 clr   :  33 
cls   :   0 clt   :   4 clv   :   0 clz   :   2 com   :   8 cp    :  10 
cpc   :  12 cpi   :  35 cpse  :   0 dec   :  25 des   :   0 eor   :   9 
fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   4 
inc   :   5 ld    :  43 ldd   :  67 ldi   : 191 lds   :  18 lpm   :  14 
lsl   :  14 lsr   :   5 mov   :  59 movw  :  17 mul   :   9 muls  :   0 
mulsu :   0 neg   :   2 nop   :   0 or    :   1 ori   :   3 out   :  33 
pop   :  20 push  :  20 rcall : 200 ret   :  77 reti  :   1 rjmp  :  81 
rol   :  25 ror   :  19 sbc   :   7 sbci  :  11 sbi   :  11 sbic  :   2 
sbis  :   3 sbiw  :  14 sbr   :   2 sbrc  :   2 sbrs  :   3 sec   :   6 
seh   :   0 sei   :   1 sen   :   0 ser   :   8 ses   :   0 set   :   3 
sev   :   0 sez   :   1 sleep :   0 spm   :   0 st    :  58 std   :  22 
sts   :  10 sub   :   4 subi  :  17 swap  :   3 tst   :  21 wdr   :   1 

Instructions used: 79 out of 114 (69.3%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000c1c   3020     80   3100    8192  37.8%
[.dseg] 0x000060 0x0001b9      0     89     89    1024   8.7%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 5 warnings
